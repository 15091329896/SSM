<?xml version="1.0" encoding="UTF-8"?>

<!-- 
	约束条件
	mapper
		namespace
		sql

 -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.test.mybatis.mapper.PeopleMapper">
	
	<resultMap type="people" id="peopleMapper">
		<id property="id" column="id" />
		<result property="name" column="name" />
	</resultMap>
	
	<sql id="peopel_select">
		select id, name from people
	</sql>
	
<!-- 	<select id="getPeopleDynamic" parameterType="people" resultMap="peopleMapper">
		<include refid="peopel_select" /> 
			where 1 = 1
			<if test="name  != null and name  != '' ">
				and name = #{name}
			</if>
	</select> -->
	
	<!-- <select id="getPeopleDynamic2" parameterType="people" resultMap="peopleMapper">
		<include refid="peopel_select" />
		where 1 = 1
		<choose>
			<when test="name != null">
				and name = #{name}
			</when>
			<otherwise>
				and name is not null
			</otherwise>
		</choose>			
	</select> -->
	
<!-- 	<select id="getPeopleDynamic2" parameterType="people" resultMap="peopleMapper">
		<include refid="peopel_select" />
		<where>
			<if test="name != null">
				 and name = #{name}
			</if>
			<if test="name != null ">
				 and 1 = 1;
			</if>
		</where>	
	</select> -->

	<!-- <select id="getPeopleDynamic2" parameterType="people" resultMap="peopleMapper">
		<include refid="peopel_select" />
		<trim prefix="where" prefixOverrides="and" suffixOverrides="," suffix="">
			<if test="name != null">
				and name = #{name}
			</if>
			<if test="id != 0">
				and id = #{id}
			</if>
		</trim>
	</select> -->
	
	<select id="getPeopleDynamic" resultMap="peopleMapper">
		<include refid="peopel_select" />
		<if test="name == '李白'.toString() ">
			where 1 = 1
		</if>
	</select>
	
	<select id="getPeopleDynamic3" resultMap="peopleMapper">
		<include refid="peopel_select" />
		where id in
		<foreach item="item" index="index" collection="peopleIds" 
			open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>
	
	
	
	
	<select id="getPeopleByID" parameterType="int" resultType="people">
		select id, name from people where id = #{id}
	</select>
	
	<select id="getAllPeople" resultType="people">
		select id, name from people
	</select>
	
	<!-- <insert id="addPeople" parameterType="people">
		insert into people(id, name) values(#{id}, #{name})
	</insert>
	 -->
	
	<insert id="addPeople" parameterType="people">
		<bind name="bind_id" value="id"/>
		<bind name="bind_name" value="name"/>
		insert into people(id, name) 
		values(
			#{bind_id}, 
			#{bind_name}
		)
	</insert>
	
	
	
	
	<!-- <update id="updatePeople" parameterType="people">
		update people set name = #{name} where id = #{id}
	</update> -->
	
	<!-- <update id="updatePeople" parameterType="people">
		update people 
			<set>
				<if test="name != null" >
					name  =#{name}
				</if>
			</set>
		where id = #{id}
	</update> -->
	<update id="updatePeople" parameterType="people">
		update people 
			<trim prefix="set" prefixOverrides="," suffixOverrides=";">
				<if test="name != null">
					name = #{name};
				</if>
			</trim>
		where id = #{id}
	</update>
	
	
	
	<delete id="deletePeople" parameterType="int">
		delete from people where id = #{id}
	</delete>
	
</mapper>